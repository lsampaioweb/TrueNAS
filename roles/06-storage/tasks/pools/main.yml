---
- name: Initializing the variables that will be used on the task
  set_fact:
    current_settings: []
    pool_id: ""
    found_pool_encryption: ""
    found_pool_type_raid: ""
    found_pool_disks: ""
    new_json_object: {}
    different_settings: {}
    create_pool: ""

- name: Reading the json file that contains the desired settings
  include_tasks: "{{ role_common_task_shared_get_desired_settings }}"
  vars:
    template_file: "pools/config.json"

- name: Getting the list of pools and searching for the settings of the {{ pool_name }} pool
  include_tasks: "get-list-and-search.yml"

- name: Creating a json object with all the attributes that are expected
  set_fact:
    new_json_object: "{{ { 'name' : pool_name, 'encryption' : encryption, 'topology' : { 'data' : [{ 'type' : found_pool_type_raid[0], 'disks' : found_pool_disks | sort }] }} }}"
  vars:
    encryption: "{{ (found_pool_encryption == '0') | ternary(false, true) }}"
  when: (current_settings | length > 0)

- name: Comparing the desired and current settings
  include_tasks: "{{ role_common_task_shared_compare_dict_json }}"
  vars:
    dict: "{{ desired_settings }}"
    json: "{{ new_json_object }}"
  when: (new_json_object | length > 0)

- name: Setting the settings for the poll "{{ pool_name }}"
  include_tasks: "{{ role_common_task_shared_update_settings }}"
  vars:
    task_file: "{{ role_common_task_uri_storage_pool_update }}"
  when: (different_settings | length > 0)

- name: Creating the poll "{{ pool_name }}"
  include_tasks: "{{ role_common_task_shared_update_settings }}"
  vars:
    task_file: "{{ role_common_task_uri_storage_pool_create }}"
    different_settings: "{{ desired_settings }}"
  register: "create_pool"
  when: (current_settings | length == 0)

- name: Pausing the play until the "{{ pool_name }}" pool is ONLINE
  include_tasks: "get-list-and-search.yml"
  vars:
    querystr: "[?name=='{{ pool_name }}' && status=='ONLINE']"
    until: "{{ response.json | json_query(querystr) }}"
    delay: 2
    retries: 30
  when: (current_settings | length == 0 and create_pool is succeeded)
